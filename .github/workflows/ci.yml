---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

env:
  TF_VERSION: 1.1.6

jobs:
  tfsec:
    name: Static Analysis
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ${{ github.ref }} [${{ github.sha }}]
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
        with:
          persist-credentials: false

      - name: Run tfsec
        run: |
          wget --no-verbose --show-progress --progress dot:giga https://github.com/aquasecurity/tfsec/releases/download/v1.1.5/tfsec-linux-amd64
          echo "6d5a20744a31597527ae32ac18dbf55f95e135c981ca52a8e34572a3a0f362d9  tfsec-linux-amd64" | sha256sum -c

          wget  --no-verbose --show-progress --progress dot:giga https://github.com/aquasecurity/tfsec/releases/download/v1.1.5/tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig
          echo "80c37e15ff168254f776db67229e3bbd3066ca5fe1d0d023c9784727bf096795  tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig" | sha256sum -c

          gpg --import < tfsec/tfsec.asc
          gpg --list-keys signing@tfsec.dev
          gpg --verify tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig tfsec-linux-amd64

          chmod +x tfsec-linux-amd64
          mv -vn tfsec-linux-amd64 /usr/local/bin/tfsec
          tfsec .

  validate:
    name: Validation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ${{ github.ref }} [${{ github.sha }}]
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
        with:
          persist-credentials: false

      - name: Setup Terraform v${{ env.TF_VERSION }}
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # v1.3.2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Initalize Terraform workspace
        run: terraform init -backend=false

      - name: Validate configuration files
        run: terraform validate

      - name: Lint configuration files
        run: terraform fmt -list -diff -recursive -check

  drift:
    name: Drift Detection
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: core
    environment:
      name: core
    needs:
      - tfsec
      - validate
    steps:
      - name: Checkout ${{ github.ref }} [${{ github.sha }}]
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
        with:
          persist-credentials: false

      - name: Setup Terraform v${{ env.TF_VERSION }}
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # v1.3.2
        with:
          cli_config_credentials_hostname: app.terraform.io
          cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}
          terraform_version: ${{ env.TF_VERSION }}

      - name: Initalize Terraform Workspace
        run: terraform init

      - name: Detect resource drift
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
        run: |
          terraform refresh -var-file=env/core.tfvars
          terraform plan -var-file=env/core.tfvars -out=core.tplan -detailed-exitcode

      - name: Cleanup workspace
        if: always()
        run: |
          find . -type f -name "*.tfplan" -print -delete;
          find . -type d -name ".terraform" -print -prune -exec rm -rf {} +;

  # snyk:
  #   name: Snyk IaC
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout ${{ github.ref }} [${{ github.sha }}]
  #       uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # v2.4.0
  #       with:
  #         persist-credentials: false

  #     - name: Run snyk iac test
  #       uses: snyk/actions/iac@14818c4695ecc4045f33c9cee9e795a788711ca4
  #       with:
  #         file: main.tf
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
