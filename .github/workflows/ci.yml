---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

env:
  TF_VERSION: 1.2.4

jobs:
  tfsec:
    name: Static Analysis
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ${{ github.ref }} [${{ github.sha }}]
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Run tfsec
        continue-on-error: true
        run: |
          wget --no-verbose --show-progress --progress dot:giga https://github.com/aquasecurity/tfsec/releases/download/v1.26.3/tfsec-linux-amd64
          echo "896872247843cc08d4c5b3b3362ca87e8939c2404c6ccb7415a523a114344224  tfsec-linux-amd64" | sha256sum -c

          wget --no-verbose --show-progress --progress dot:giga https://github.com/aquasecurity/tfsec/releases/download/v1.26.3/tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig
          echo "971a7151ed435ee6f8cadea42c838addef92aa063ab66fda97eb063b66a14a15  tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig" | sha256sum -c

          gpg --import < tfsec/tfsec.asc
          gpg --list-keys signing@tfsec.dev
          gpg --verify tfsec-linux-amd64.D66B222A3EA4C25D5D1A097FC34ACEFB46EC39CE.sig tfsec-linux-amd64

          chmod +x tfsec-linux-amd64
          mv -vn tfsec-linux-amd64 /usr/local/bin/tfsec
          tfsec .

  validate:
    name: Validation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout ${{ github.ref }} [${{ github.sha }}]
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup Terraform v${{ env.TF_VERSION }}
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Initalize Terraform workspace
        run: terraform init -backend=false

      - name: Validate configuration files
        run: terraform validate

      - name: Lint configuration files
        run: terraform fmt -list -diff -recursive -check

  # drift:
  #   name: Drift Detection
  #   runs-on: ubuntu-20.04
  #   defaults:
  #     run:
  #       working-directory: core
  #   environment:
  #     name: core
  #   needs:
  #     - tfsec
  #     - validate
  #   steps:
  #     - name: Checkout ${{ github.ref }} [${{ github.sha }}]
  #       uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v3.0.0
  #       with:
  #         persist-credentials: false

  #     - name: Setup Terraform v${{ env.TF_VERSION }}
  #       uses: hashicorp/setup-terraform@17d4c9b8043b238f6f35641cdd8433da1e6f3867 # v1.3.2
  #       with:
  #         cli_config_credentials_hostname: app.terraform.io
  #         cli_config_credentials_token: ${{ secrets.TERRAFORM_TOKEN }}
  #         terraform_version: ${{ env.TF_VERSION }}

  #     - name: Initalize Terraform Workspace
  #       run: terraform init

  #     - name: Detect resource drift
  #       env:
  #         DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
  #         CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  #       run: |
  #         terraform refresh -var-file=env/core.tfvars
  #         terraform plan -var-file=env/core.tfvars -out=core.tplan -detailed-exitcode

  #     - name: Cleanup workspace
  #       if: always()
  #       run: |
  #         find . -type f -name "*.tfplan" -print -delete;
  #         find . -type d -name ".terraform" -print -prune -exec rm -rf {} +;

  # snyk:
  #   name: Snyk IaC
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout ${{ github.ref }} [${{ github.sha }}]
  #       uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # v2.4.0
  #       with:
  #         persist-credentials: false

  #     - name: Run snyk iac test
  #       uses: snyk/actions/iac@14818c4695ecc4045f33c9cee9e795a788711ca4
  #       with:
  #         file: main.tf
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
